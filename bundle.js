(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>u});var a=t(537),o=t.n(a),r=t(645),i=t.n(r),A=t(667),s=t.n(A),l=new URL(t(51),t.b),d=i()(o());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&family=Roboto:wght@400;700&display=swap);"]);var c=s()(l);d.push([n.id,'html {\n  font-family: "Roboto", sans-serif;\n}\n\nbody {\n  background-image: url('+c+");\n  background-color: #242424;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.header {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background-color: #242424;\n  opacity: 0.8;\n}\n\n.title {\n  text-align: center;\n  color: rgb(243, 243, 243);\n  opacity: 1;\n}\n\n.display {\n  margin: 7em auto 0;\n  background-color: #242424;\n  color: rgb(243, 243, 243);\n  opacity: 0.6;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  gap: 1em;\n  border-radius: 0.5em;\n  padding: 0.5em;\n  max-width: 500px;\n  animation: linear fadeInWithSlide 1s;\n}\n\n.item {\n  text-align: center;\n}\n\n.openCityModalBtn {\n  width: fit-content;\n  padding: 1em;\n  border: 1px solid rgb(243, 243, 243);\n  background-color: #242424;\n  color: rgb(243, 243, 243);\n  border-radius: 0.5em;\n  margin: 1em 0;\n}\n\n.openCityModalBtn:hover {\n  color: #242424;\n  background-color: rgb(243, 243, 243);\n}\n\n.info-section {\n  display: flex;\n  justify-content: space-evenly;\n  width: 100%;\n}\n\n.location-data,\n.weather-data {\n  width: 50%;\n  padding: 0.5em;\n  border: 1px solid rgb(243, 243, 243);\n  border-radius: 0.5em;\n  margin: 0.5em;\n}\n\n.location,\n.weather,\n.polution {\n  margin-top: 0;\n}\n\n.pollution-bar {\n  position: relative;\n  z-index: -1;\n}\n\n.pollution-bar > img {\n  width: 300px;\n  height: auto;\n  margin: auto;\n  border: 2px solid rgb(243, 243, 243);\n  border-radius: 3px;\n  position: relative;\n  z-index: -1;\n}\n\n.cover {\n  position: absolute;\n  right: 2px;\n  top: 5px;\n  height: 10px;\n  width: 255px;\n  background: rgb(243, 243, 243);\n  z-index: 10;\n  width: 0;\n  transition: width 1s;\n}\n\n.content {\n  color: #242424;\n  max-width: 500px;\n  margin: 0 auto;\n  animation: linear fadeInWithRollUp 1s;\n}\n\n.size-comparison-image {\n  width: 100%;\n  height: auto;\n  border-radius: 0.5em;\n}\n\nul {\n  list-style: none;\n}\n\nli > a {\n  text-decoration: none;\n  color: black;\n}\n\nli > a:hover {\n  color: rgb(97, 11, 109);\n}\n\n.map {\n  margin-top: 2em;\n  display: flex;\n}\n\n.map > iframe {\n  width: 200px;\n  height: 200px;\n  border-radius: 0.5em;\n  margin: auto;\n}\n\n/* modal component styles */\n.modal-cover,\n.transparent {\n  display: none;\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  left: 0;\n  top: 0;\n}\n\n.modal-cover {\n  background-color: black;\n  opacity: 0.7;\n  z-index: 1;\n}\n\n.transparent {\n  background: transparent;\n  z-index: 2;\n}\n\n.modal-form {\n  margin: auto;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  background-color: rgb(243, 243, 243);\n  opacity: 1;\n  padding: 3em 3em 1em;\n  border-radius: 0.5em;\n  animation: linear fadeInWithRollUp 1s;\n}\n\n.headline {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: dodgerblue;\n  color: rgb(243, 243, 243);\n  border-radius: 0.5em 0.5em 0 0;\n  padding: 5px;\n}\n\n.headline > h3 {\n  margin: 0;\n}\n\n.input {\n  display: flex;\n  justify-content: space-between;\n  margin: 0.7em 0;\n}\n\n.input > label {\n  margin-right: 0.5em;\n  margin-top: 5px;\n}\n\n.input > input {\n  padding: 5px;\n}\n\n.input-hidden {\n  display: none;\n}\n\n.headline > button {\n  border: none;\n  background: dodgerblue;\n  color: rgb(243, 243, 243);\n}\n\n.btn {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin: 0.7em 0 0;\n}\n\n.btn > button {\n  margin: 0.5em;\n  padding: 5px 8px;\n}\n\n#submit-btn {\n  color: rgb(243, 243, 243);\n  background: dodgerblue;\n  border: none;\n  border-radius: 5px;\n  margin-right: -0.5px;\n}\n\n#submit-btn:hover {\n  background: rgb(30, 120, 255);\n}\n\n.show {\n  display: flex;\n}\n\n/* responsiveness, animations */\n@media (min-width: 992px) {\n  main {\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    gap: 2em;\n  }\n\n  .display {\n    margin: 7em 0 0 0;\n    width: 500px;\n  }\n\n  .content {\n    margin: 7em 0 0 0;\n  }\n\n  .map > iframe {\n    width: 510px;\n    height: 510px;\n  }\n}\n\n@keyframes fadeInWithSlide {\n  from {\n    transform: translateX(-7em);\n    opacity: 0;\n  }\n\n  to {\n    transform: none;\n    opacity: 0.6;\n  }\n}\n\n@keyframes fadeInWithRollUp {\n  from {\n    opacity: 0;\n    transform: translateY(7em);\n  }\n\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeOutWithRollDown {\n  from {\n    opacity: 1;\n    transform: none;\n  }\n\n  to {\n    opacity: 0;\n    transform: translateY(7em);\n  }\n}\n\n/* classes to animate the pollution-bar cover*/\n.l-250 {\n  width: 250px;\n}\n\n.l-200 {\n  width: 200px;\n}\n\n.l-170 {\n  width: 170px;\n}\n\n.l-90 {\n  width: 90px;\n}\n\n.l-50 {\n  width: 50px;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"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",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&family=Roboto:wght@400;700&display=swap");\n\nhtml {\n  font-family: "Roboto", sans-serif;\n}\n\nbody {\n  background-image: url("./assets/weather-background.jpg");\n  background-color: #242424;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.header {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background-color: #242424;\n  opacity: 0.8;\n}\n\n.title {\n  text-align: center;\n  color: rgb(243, 243, 243);\n  opacity: 1;\n}\n\n.display {\n  margin: 7em auto 0;\n  background-color: #242424;\n  color: rgb(243, 243, 243);\n  opacity: 0.6;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  gap: 1em;\n  border-radius: 0.5em;\n  padding: 0.5em;\n  max-width: 500px;\n  animation: linear fadeInWithSlide 1s;\n}\n\n.item {\n  text-align: center;\n}\n\n.openCityModalBtn {\n  width: fit-content;\n  padding: 1em;\n  border: 1px solid rgb(243, 243, 243);\n  background-color: #242424;\n  color: rgb(243, 243, 243);\n  border-radius: 0.5em;\n  margin: 1em 0;\n}\n\n.openCityModalBtn:hover {\n  color: #242424;\n  background-color: rgb(243, 243, 243);\n}\n\n.info-section {\n  display: flex;\n  justify-content: space-evenly;\n  width: 100%;\n}\n\n.location-data,\n.weather-data {\n  width: 50%;\n  padding: 0.5em;\n  border: 1px solid rgb(243, 243, 243);\n  border-radius: 0.5em;\n  margin: 0.5em;\n}\n\n.location,\n.weather,\n.polution {\n  margin-top: 0;\n}\n\n.pollution-bar {\n  position: relative;\n  z-index: -1;\n}\n\n.pollution-bar > img {\n  width: 300px;\n  height: auto;\n  margin: auto;\n  border: 2px solid rgb(243, 243, 243);\n  border-radius: 3px;\n  position: relative;\n  z-index: -1;\n}\n\n.cover {\n  position: absolute;\n  right: 2px;\n  top: 5px;\n  height: 10px;\n  width: 255px;\n  background: rgb(243, 243, 243);\n  z-index: 10;\n  width: 0;\n  transition: width 1s;\n}\n\n.content {\n  color: #242424;\n  max-width: 500px;\n  margin: 0 auto;\n  animation: linear fadeInWithRollUp 1s;\n}\n\n.size-comparison-image {\n  width: 100%;\n  height: auto;\n  border-radius: 0.5em;\n}\n\nul {\n  list-style: none;\n}\n\nli > a {\n  text-decoration: none;\n  color: black;\n}\n\nli > a:hover {\n  color: rgb(97, 11, 109);\n}\n\n.map {\n  margin-top: 2em;\n  display: flex;\n}\n\n.map > iframe {\n  width: 200px;\n  height: 200px;\n  border-radius: 0.5em;\n  margin: auto;\n}\n\n/* modal component styles */\n.modal-cover,\n.transparent {\n  display: none;\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  left: 0;\n  top: 0;\n}\n\n.modal-cover {\n  background-color: black;\n  opacity: 0.7;\n  z-index: 1;\n}\n\n.transparent {\n  background: transparent;\n  z-index: 2;\n}\n\n.modal-form {\n  margin: auto;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  background-color: rgb(243, 243, 243);\n  opacity: 1;\n  padding: 3em 3em 1em;\n  border-radius: 0.5em;\n  animation: linear fadeInWithRollUp 1s;\n}\n\n.headline {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: dodgerblue;\n  color: rgb(243, 243, 243);\n  border-radius: 0.5em 0.5em 0 0;\n  padding: 5px;\n}\n\n.headline > h3 {\n  margin: 0;\n}\n\n.input {\n  display: flex;\n  justify-content: space-between;\n  margin: 0.7em 0;\n}\n\n.input > label {\n  margin-right: 0.5em;\n  margin-top: 5px;\n}\n\n.input > input {\n  padding: 5px;\n}\n\n.input-hidden {\n  display: none;\n}\n\n.headline > button {\n  border: none;\n  background: dodgerblue;\n  color: rgb(243, 243, 243);\n}\n\n.btn {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin: 0.7em 0 0;\n}\n\n.btn > button {\n  margin: 0.5em;\n  padding: 5px 8px;\n}\n\n#submit-btn {\n  color: rgb(243, 243, 243);\n  background: dodgerblue;\n  border: none;\n  border-radius: 5px;\n  margin-right: -0.5px;\n}\n\n#submit-btn:hover {\n  background: rgb(30, 120, 255);\n}\n\n.show {\n  display: flex;\n}\n\n/* responsiveness, animations */\n@media (min-width: 992px) {\n  main {\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    gap: 2em;\n  }\n\n  .display {\n    margin: 7em 0 0 0;\n    width: 500px;\n  }\n\n  .content {\n    margin: 7em 0 0 0;\n  }\n\n  .map > iframe {\n    width: 510px;\n    height: 510px;\n  }\n}\n\n@keyframes fadeInWithSlide {\n  from {\n    transform: translateX(-7em);\n    opacity: 0;\n  }\n\n  to {\n    transform: none;\n    opacity: 0.6;\n  }\n}\n\n@keyframes fadeInWithRollUp {\n  from {\n    opacity: 0;\n    transform: translateY(7em);\n  }\n\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeOutWithRollDown {\n  from {\n    opacity: 1;\n    transform: none;\n  }\n\n  to {\n    opacity: 0;\n    transform: translateY(7em);\n  }\n}\n\n/* classes to animate the pollution-bar cover*/\n.l-250 {\n  width: 250px;\n}\n\n.l-200 {\n  width: 200px;\n}\n\n.l-170 {\n  width: 170px;\n}\n\n.l-90 {\n  width: 90px;\n}\n\n.l-50 {\n  width: 50px;\n}\n'],sourceRoot:""}]);const u=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);a&&i[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var r={},i=[],A=0;A<n.length;A++){var s=n[A],l=a.base?s[0]+a.base:s[0],d=r[l]||0,c="".concat(l," ").concat(d);r[l]=d+1;var u=t(c),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,a);a.byIndex=A,e.splice(A,0,{identifier:c,updater:m,references:1})}i.push(c)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=a(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var A=t(r[i]);e[A].references--}for(var s=a(n,o),l=0;l<r.length;l++){var d=t(r[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},168:(n,e,t)=>{n.exports=t.p+"512a3fe1e967d0b82f59.ico"},729:(n,e,t)=>{n.exports=t.p+"c9fa7531c13746f08b39.jpg"},453:(n,e,t)=>{n.exports=t.p+"8197b9f22aee475756b5.png"},51:(n,e,t)=>{n.exports=t.p+"8ca4909c8ed82c97afa3.jpg"}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");a.length&&(n=a[a.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href;var a={};(()=>{t.d(a,{U:()=>X});var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),A=t.n(i),s=t(565),l=t.n(s),d=t(216),c=t.n(d),u=t(589),p=t.n(u),m=t(28),C={};C.styleTagTransform=p(),C.setAttributes=l(),C.insert=A().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=c(),e()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;const E={coordinates:{latitude:0,longitude:0},countryCode:"",countryName:"",city:"",weather:"",tempF:0,tempC:0,pm2_5:0},g="https://api.openweathermap.org/data/2.5/weather?lat=",h="https://api.openweathermap.org/data/2.5/air_pollution?lat=",B="https://api.openweathermap.org/geo/1.0/direct?q=",b="0fb9ebda5842e2a12a43af55c70d2e3f";function f(n){return fetch(n,{mode:"cors"}).then((n=>n.json()))}function y(n){const e=g+n.latitude+"&lon="+n.longitude+"&appid="+b,t=h+n.latitude+"&lon="+n.longitude+"&appid="+b,a=f(e).then((n=>function(n){const e=E;e.coordinates.latitude=n.coord.lat,e.coordinates.longitude=n.coord.lon,e.countryCode=n.sys.country;let t=new Intl.DisplayNames(["en"],{type:"region"});return e.countryName=t.of(n.sys.country),e.city=n.name,e.weather=n.weather[0].description,e.tempC=Math.round(n.main.temp-273.15),e.tempF=Math.round(1.8*e.tempC+32),e}(n))),o=f(t).then((n=>function(n){return n.list[0].components.pm2_5}(n)));return Promise.all([a,o]).then((n=>(n[0].pm2_5=n[1],n[0])))}var x=t(453),v=t(729),S=t(168);const w=document.querySelector(".latitude"),k=document.querySelector(".longitude"),M=document.querySelector(".country-code"),I=document.querySelector(".country-name"),Y=document.querySelector(".city"),T=document.querySelector(".condition"),U=document.querySelector(".temp-celsius"),R=document.querySelector(".temp-farenheit"),L=document.querySelector(".pm2_5"),G=document.querySelector(".cover");var N=document.querySelector("link[rel*='icon']")||document.createElement("link");N.type="image/x-icon",N.href=S,document.getElementsByTagName("head")[0].appendChild(N);const P=document.querySelector(".pollution-bar"),W=document.querySelector(".content"),z=document.createElement("img");z.src=x,z.alt="color bar to meter pm2.5 particulate concentration",P.appendChild(z);const Z=document.createElement("img");Z.src=v,Z.alt="image comparing the size of a pm2.5 particle to the size of the human hair",Z.classList.add("size-comparison-image"),W.appendChild(Z);const q=document.querySelectorAll(".modal");document.querySelector(".openCityModalBtn").addEventListener("click",(function(){q.forEach((n=>{n.classList.add("show")}))}));const F=document.querySelector(".transparent"),j=document.querySelector("form");j.addEventListener("click",(n=>{n.stopPropagation()}));const K=document.querySelector("#close-btn"),O=document.querySelector("#cancel-btn");function V(){j.style.animation="linear fadeOutWithRollDown 1s",setTimeout((()=>{q.forEach((n=>{n.classList.remove("show")})),j.style=""}),1e3)}F.addEventListener("click",V),K.addEventListener("click",V),O.addEventListener("click",V),j.addEventListener("submit",(function(n){n.preventDefault();X({city:document.querySelector("#city").value,country:D.value,state:document.querySelector("#state").value}),V(),j.reset(),H.classList.remove("input"),H.classList.add("input-hidden")}));const D=document.querySelector("#country"),H=document.querySelector("#state-row");D.addEventListener("keyup",(n=>{"United States"==D.value?(H.classList.remove("input-hidden"),H.classList.add("input")):(H.classList.remove("input"),H.classList.add("input-hidden"))}));const Q=document.querySelector(".map");function J(n){const{coordinates:e,countryCode:t,countryName:a,city:o,weather:r,tempF:i,tempC:A,pm2_5:s}=n,{latitude:l,longitude:d}=e;let c;switch(w.textContent=`latitude: ${l}`,k.textContent=`longitude: ${d}`,M.textContent=`country code: ${t}`,I.textContent=`country: ${a}`,Y.textContent=`city: ${o}`,T.textContent=`condition: ${r}`,U.textContent=`temperature (Celsius): ${A}`,R.textContent=`temperature (Farenheit): ${i}`,L.textContent=`pm2.5 reading: ${s} µg/m³`,Q.firstChild&&Q.removeChild(Q.firstChild),Q.appendChild(function(n,e){const t=document.createElement("iframe");t.setAttribute("style","border: 0"),t.setAttribute("loading","lazy"),t.setAttribute("allowfullscreen","true");const a=`https://www.google.com/maps/embed/v1/view?zoom=10&center=${e.latitude}, ${e.longitude}&key=AIzaSyAyeqryVcCKYGXm0miOQuRsyifHTk2I-Fo`;return t.setAttribute("src",a),t}(0,e)),!0){case s<=12:c="l-250";break;case s>12&&s<=35:c="l-200";break;case s>35&&s<=55:c="l-170";break;case s>55&&s<=150:c="l-90";break;case s>150&&s<=250:c="l-50"}setTimeout((()=>{G.classList.remove("l-250","l-200","l-170","l-90","l-50"),setTimeout((()=>{c&&G.classList.add(c)}),1e3)}),1e3)}const $={BD:"Bangladesh",BE:"Belgium",BF:"Burkina Faso",BG:"Bulgaria",BA:"Bosnia and Herzegovina",BB:"Barbados",WF:"Wallis and Futuna",BL:"Saint Barthelemy",BM:"Bermuda",BN:"Brunei",BO:"Bolivia",BH:"Bahrain",BI:"Burundi",BJ:"Benin",BT:"Bhutan",JM:"Jamaica",BV:"Bouvet Island",BW:"Botswana",WS:"Samoa",BQ:"Bonaire, Saint Eustatius and Saba ",BR:"Brazil",BS:"Bahamas",JE:"Jersey",BY:"Belarus",BZ:"Belize",RU:"Russia",RW:"Rwanda",RS:"Serbia",TL:"East Timor",RE:"Reunion",TM:"Turkmenistan",TJ:"Tajikistan",RO:"Romania",TK:"Tokelau",GW:"Guinea-Bissau",GU:"Guam",GT:"Guatemala",GS:"South Georgia and the South Sandwich Islands",GR:"Greece",GQ:"Equatorial Guinea",GP:"Guadeloupe",JP:"Japan",GY:"Guyana",GG:"Guernsey",GF:"French Guiana",GE:"Georgia",GD:"Grenada",GB:"United Kingdom",GA:"Gabon",SV:"El Salvador",GN:"Guinea",GM:"Gambia",GL:"Greenland",GI:"Gibraltar",GH:"Ghana",OM:"Oman",TN:"Tunisia",JO:"Jordan",HR:"Croatia",HT:"Haiti",HU:"Hungary",HK:"Hong Kong",HN:"Honduras",HM:"Heard Island and McDonald Islands",VE:"Venezuela",PR:"Puerto Rico",PS:"Palestinian Territory",PW:"Palau",PT:"Portugal",SJ:"Svalbard and Jan Mayen",PY:"Paraguay",IQ:"Iraq",PA:"Panama",PF:"French Polynesia",PG:"Papua New Guinea",PE:"Peru",PK:"Pakistan",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PM:"Saint Pierre and Miquelon",ZM:"Zambia",EH:"Western Sahara",EE:"Estonia",EG:"Egypt",ZA:"South Africa",EC:"Ecuador",IT:"Italy",VN:"Vietnam",SB:"Solomon Islands",ET:"Ethiopia",SO:"Somalia",ZW:"Zimbabwe",SA:"Saudi Arabia",ES:"Spain",ER:"Eritrea",ME:"Montenegro",MD:"Moldova",MG:"Madagascar",MF:"Saint Martin",MA:"Morocco",MC:"Monaco",UZ:"Uzbekistan",MM:"Myanmar",ML:"Mali",MO:"Macao",MN:"Mongolia",MH:"Marshall Islands",MK:"Macedonia",MU:"Mauritius",MT:"Malta",MW:"Malawi",MV:"Maldives",MQ:"Martinique",MP:"Northern Mariana Islands",MS:"Montserrat",MR:"Mauritania",IM:"Isle of Man",UG:"Uganda",TZ:"Tanzania",MY:"Malaysia",MX:"Mexico",IL:"Israel",FR:"France",IO:"British Indian Ocean Territory",SH:"Saint Helena",FI:"Finland",FJ:"Fiji",FK:"Falkland Islands",FM:"Micronesia",FO:"Faroe Islands",NI:"Nicaragua",NL:"Netherlands",NO:"Norway",NA:"Namibia",VU:"Vanuatu",NC:"New Caledonia",NE:"Niger",NF:"Norfolk Island",NG:"Nigeria",NZ:"New Zealand",NP:"Nepal",NR:"Nauru",NU:"Niue",CK:"Cook Islands",XK:"Kosovo",CI:"Ivory Coast",CH:"Switzerland",CO:"Colombia",CN:"China",CM:"Cameroon",CL:"Chile",CC:"Cocos Islands",CA:"Canada",CG:"Republic of the Congo",CF:"Central African Republic",CD:"Democratic Republic of the Congo",CZ:"Czech Republic",CY:"Cyprus",CX:"Christmas Island",CR:"Costa Rica",CW:"Curacao",CV:"Cape Verde",CU:"Cuba",SZ:"Swaziland",SY:"Syria",SX:"Sint Maarten",KG:"Kyrgyzstan",KE:"Kenya",SS:"South Sudan",SR:"Suriname",KI:"Kiribati",KH:"Cambodia",KN:"Saint Kitts and Nevis",KM:"Comoros",ST:"Sao Tome and Principe",SK:"Slovakia",KR:"South Korea",SI:"Slovenia",KP:"North Korea",KW:"Kuwait",SN:"Senegal",SM:"San Marino",SL:"Sierra Leone",SC:"Seychelles",KZ:"Kazakhstan",KY:"Cayman Islands",SG:"Singapore",SE:"Sweden",SD:"Sudan",DO:"Dominican Republic",DM:"Dominica",DJ:"Djibouti",DK:"Denmark",VG:"British Virgin Islands",DE:"Germany",YE:"Yemen",DZ:"Algeria",US:"United States",UY:"Uruguay",YT:"Mayotte",UM:"United States Minor Outlying Islands",LB:"Lebanon",LC:"Saint Lucia",LA:"Laos",TV:"Tuvalu",TW:"Taiwan",TT:"Trinidad and Tobago",TR:"Turkey",LK:"Sri Lanka",LI:"Liechtenstein",LV:"Latvia",TO:"Tonga",LT:"Lithuania",LU:"Luxembourg",LR:"Liberia",LS:"Lesotho",TH:"Thailand",TF:"French Southern Territories",TG:"Togo",TD:"Chad",TC:"Turks and Caicos Islands",LY:"Libya",VA:"Vatican",VC:"Saint Vincent and the Grenadines",AE:"United Arab Emirates",AD:"Andorra",AG:"Antigua and Barbuda",AF:"Afghanistan",AI:"Anguilla",VI:"U.S. Virgin Islands",IS:"Iceland",IR:"Iran",AM:"Armenia",AL:"Albania",AO:"Angola",AQ:"Antarctica",AS:"American Samoa",AR:"Argentina",AU:"Australia",AT:"Austria",AW:"Aruba",IN:"India",AX:"Aland Islands",AZ:"Azerbaijan",IE:"Ireland",ID:"Indonesia",UA:"Ukraine",QA:"Qatar",MZ:"Mozambique"};function X(n){const e=(t=n.country,Object.keys($).find((n=>$[n]===t)));var t;const a=function(n,e,t){return B+n+","+t+","+e+"&limit=5&appid="+b}(n.city,e,n.state);f(a).then((n=>({latitude:n[0].lat,longitude:n[0].lon}))).then((n=>y(n))).then((n=>{J(n)})).catch((n=>console.error(n.message,n.code)))}y({latitude:47.497913,longitude:19.040236}).then((n=>{J(n)})).then((async function(){await new Promise((n=>setTimeout(n,3e3)))})).then((()=>new Promise((function(n,e){navigator.geolocation.getCurrentPosition((e=>{const t={latitude:e.coords.latitude,longitude:e.coords.longitude};n(t)}),(n=>{e(n)}))})))).then((n=>y(n))).then((n=>{J(n)})).catch((n=>console.error(n.message,n.code)))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,